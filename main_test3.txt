import time

def get_local_hour():
    local_time = time.localtime()
    return (local_time.tm_hour, local_time.tm_min, local_time.tm_sec)
   
# règles d'incrémentation des secondes, minutes, heures
def incrementation_heure(s,m,h):
      
            if s == 60 :
                s = 0
                m += 1
            
            if m == 60 :
                m = 0
                h += 1   
            if h == 24:
                h = 0
                return s,m,h
def convertir_en_12H(tuple):
        h, m, s = tuple
        periode = "AM"

                        h, m, s = tuple
                        s += 1

                        # règles d'incrémentation des secondes, minutes, heures
                        if s == 60 :
                            s = 0
                            m += 1
                        
                        if m == 60 :
                            m = 0
                            h += 1   
                        if h == 24 :
                            h = 0
                        incrementation_heure(s,m,h)

                        # Création du tuple
                        new_tuple = (h, m, s)
@@ -42,31 +48,22 @@
        except KeyboardInterrupt:
                    alarm()
def clock_12h(tuple):
            try:  
                                while True : 
                                    h, m, s = tuple
                                    s += 1
                                    
                                    # règles d'incrémentation des secondes, minutes, heures
                                    if s == 60 :
                                        s = 0
                                        m += 1
                                    
                                    if m == 60 :
                                        m = 0
                                        h += 1   
    try:  
        while True : 
            h, m, s = tuple
            s += 1
            
            incrementation_heure(h,m,s)
            
            new_tuple = convertir_en_12H((h, m, s))

                                    if h == 12:
                                        h = 0
                                    new_tuple = convertir_en_12H((h, m, s))
            # Affichage au format HH : MM : SS
            print(f"{new_tuple[0]:02} : {new_tuple[1]:02} : {new_tuple[2]:02} {new_tuple[3]}", end="\r")

                                    # Affichage au format HH : MM : SS
                                    print(f"{new_tuple[0]:02} : {new_tuple[1]:02} : {new_tuple[2]:02} {new_tuple[3]}", end="\r")
                                    
                                    time.sleep(1)
                            
            except KeyboardInterrupt:
                main()
            time.sleep(1)
                    
    except KeyboardInterrupt:
        main()

                      # Boucle infinie, incrémentée seconde par seconde, possibilité de stop (KeyboardInterrupt)

@@ -78,22 +75,23 @@
    print(f"Alarme réglée pour {h_alarm:02} : {m_alarm:02}")

    while True:
            local_time =get_local_hour()
            local_hour = local_time[0]
            local_minutes = local_time[1]
            local_secondes = local_time[2]
        local_time =get_local_hour()
        local_hour = local_time[0]
        local_minutes = local_time[1]
        local_secondes = local_time[2]

            if h_alarm == local_hour and m_alarm == local_minutes:
                try:
                      while True:
                            print("Alarm !!!!       ",end="\r")
                
                except KeyboardInterrupt:
                       main()
            else:
                  print(f"{local_hour:02} : {local_minutes:02} : {local_secondes:02}",end="\r", flush=True)
        if h_alarm == local_hour and m_alarm == local_minutes:
            try:
                    while True:
                        print("Alarm !!!!       ",end="\r")
            
            except KeyboardInterrupt:
                    main()
        else:
                print(f"{local_hour:02} : {local_minutes:02} : {local_secondes:02}",end="\r", flush=True)


      
# Fonction horloge
def main():
    tuple = get_local_hour()

    else:
       clock_24h(tuple)
        
            

main()
if __name__ == "__main__":
    main()
